<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
  xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"  
  xsi:schemaLocation="http://www.springframework.org/schema/beans  
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
       http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context-3.0.xsd  
       http://www.springframework.org/schema/aop  
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx  
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
  
  <!-- 引入属性文件 -->  
  <context:property-placeholder location="classpath:config/jdbc.properties" />
  <!-- Hibernate配置 -->	
  <!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
  <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" id="dataSource">		 
     <property name="driverClass" value="${jdbc.driver}">  </property>		
     <property name="jdbcUrl" value="${jdbc.url}">  </property>		
     <property name="user" value="${jdbc.username}">	</property>	  
     <property name="password" value="${jdbc.password}">	</property>	  
<!-- <property name="autoCommitOnClose" value="true"> </property>		 
     <property name="checkoutTimeout" value="${cpool.checkoutTimeout}"> </property>		 
     <property name="initialPoolSize" value="${cpool.minPoolSize}"> </property>		 
     <property name="minPoolSize" value="${cpool.minPoolSize}"> </property>		 
     <property name="maxPoolSize" value="${cpool.maxPoolSize}"> </property>		 
     <property name="maxIdleTime" value="${cpool.maxIdleTime}"> </property>		 
     <property name="acquireIncrement" value="${cpool.acquireIncrement}"> </property>		 
     <property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}"> </property>   
-->
  </bean> 
  <bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">		 
    <property name="dataSource" ref="dataSource"></property>		 
    
    <property name="packagesToScan" value="com.doctorhelper.entity"> </property>		 
    <property name="hibernateProperties">			 
      <props>
      <!-- 	 
      <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>	
       -->			
       <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>		
      <prop key="hibernate.show_sql">true</prop>
      <prop key="hibernate.format_sql">true</prop>
      <prop key="hibernate.hbm2ddl.auto">update</prop> 
      <prop key="javax.persistence.validation.mode">none</prop>
      <!-- 
      <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProviderr</prop>				 
      <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>								 
      <prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache/ehcache-hibernate-local.xml</prop>  
       -->			   
      <prop key="current_session_context_class">thread</prop>				  
      <!-- <prop key="hibernate.cache.use_second_level_cache">true</prop> -->		
      <prop key="hibernate.cache.use_query_cache">false</prop>		  
      <prop key="jdbc.use_scrollable_resultset">false</prop>		
      <!-- <prop key="hibernate.transaction.auto_close_session">false</prop> -->			
      </props>		
     </property>
   </bean> 
  
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >  
      <property name="dataSource" ref="dataSource"></property>
   </bean> 
  <!-- 事务管理器 -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory">
      <ref local="sessionFactory"/>
    </property>
  </bean>
  <!-- 采用声明式容器管理事务一般只对service层进行处理 -->   
  <aop:config expose-proxy="true">
    <!-- 只对业务逻辑层实施事务 -->   
    <aop:pointcut id="txPointcut" expression="execution(* com.doctorhelper.service.*.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>  
    <!-- 
    proxy-target-class="true"
    <aop:advisor pointcut="execution(* com.fangjian.core.platform.service.*.*(..))" advice-ref="txAdvice"/>
    <aop:advisor pointcut="execution(* com.fangjian.core.platform.service.*.*(..))" advice-ref="txAdvice"/>
     -->
  </aop:config>
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="merge*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
      <tx:method name="put*" propagation="REQUIRED" />  
      <tx:method name="use*" propagation="REQUIRED"/>  
      <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到-->  
      <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
      <tx:method name="count*" propagation="REQUIRED" read-only="true" />  
      <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
      <tx:method name="list*" propagation="REQUIRED" read-only="true" />  
      <tx:method name="*" propagation="REQUIRED" read-only="true" rollback-for="java.lang.Exception"/>  
    </tx:attributes>
  </tx:advice>
</beans>